#version: "3.8"

services:
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        restart: unless-stopped
        user: 1000:1000
        depends_on:
            - prometheus
        volumes:
            - /mnt/c_data/monitoring/grafana/app:/var/lib/grafana
        networks:
            - monitoring_net
            - traefik_net
        labels:
            - traefik.enable=true
            - traefik.http.routers.grafana.rule=Host(`${GRAFANA_DOMAIN}`)
            - traefik.http.routers.grafana.entryPoints=websecure
            - traefik.http.routers.grafana.tls=true
            - traefik.http.routers.grafana.tls.certResolver=prod
            - traefik.http.middlewares.grafana_headers.headers.forceSTSHeader=true
            - traefik.http.middlewares.grafana_headers.headers.stsIncludeSubdomains=true
            - traefik.http.middlewares.grafana_headers.headers.stsPreload=false
            - traefik.http.middlewares.grafana_headers.headers.stsSeconds=31536000
            - traefik.http.routers.grafana.middlewares=authelia@docker,grafana_headers

    prometheus:
        image: prom/prometheus:v2.55.0
        container_name: prometheus
        restart: unless-stopped
        user: 1000:1000
        volumes:
            - /mnt/c_data/monitoring/prometheus/config:/etc/prometheus
            - /mnt/c_data/monitoring/prometheus/database:/prometheus
        networks:
            - monitoring_net
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time=28d"

    prom-node-exporter:
        image: prom/node-exporter:v1.8.2
        container_name: prom-node-exporter
        restart: unless-stopped
        volumes:
            - /:/host/rootfs:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
        networks:
            - monitoring_net
        command:
            - "--path.rootfs=/host/rootfs"
            - "--path.procfs=/host/proc"
            - "--path.sysfs=/host/sys"

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:v0.49.1
        container_name: cadvisor
        restart: unless-stopped
        volumes:
            - /:/rootfs:ro
            - /sys:/sys:ro
            - /var/run:/var/run:ro
            - /var/lib/docker/:/var/lib/docker:ro
        networks:
            - monitoring_net

networks:
    monitoring_net:
        external: true
    traefik_net:
        external: true
