
services:
    nextcloud:
        image: nextcloud:30
        container_name: nextcloud
        restart: unless-stopped
        depends_on:
            - nextcloud-database
            - nextcloud-cache
        volumes:
            - /mnt/homecloud/data/nextcloud/app:/var/www/html
            - /mnt/homecloud/extern:/mnt/homecloud/extern:ro
        networks:
            - nextcloud_net
            - traefik_net
        labels:
            - traefik.enable=true
            - traefik.http.routers.nextcloud.rule=Host(`${DOMAIN}`) && PathRegexp(`^/nextcloud([/?].*)?$`)
            - traefik.http.routers.nextcloud.entryPoints=websecure
            - traefik.http.routers.nextcloud.tls=true
            - traefik.http.routers.nextcloud.tls.certResolver=ts
            - traefik.http.middlewares.nextcloud_headers.headers.forceSTSHeader=true
            - traefik.http.middlewares.nextcloud_headers.headers.stsIncludeSubdomains=true
            - traefik.http.middlewares.nextcloud_headers.headers.stsPreload=false
            - traefik.http.middlewares.nextcloud_headers.headers.stsSeconds=31536000
            - traefik.http.middlewares.nextcloud_sp.stripPrefix.prefixes=/nextcloud
            - traefik.http.routers.nextcloud.middlewares=authelia@docker,nextcloud_headers,nextcloud_sp
            - traefik.http.services.nextcloud.loadBalancer.server.port=80
        environment:
            - OVERWRITEPROTOCOL=https
            - OVERWRITECLIURL=https://${DOMAIN}/nextcloud
            - OVERWRITEWEBROOT=/nextcloud
            - POSTGRES_HOST=nextcloud-database
            - POSTGRES_DB=nextcloud
            - POSTGRES_USER=nextcloud
            - POSTGRES_PASSWORD=${NEXTCLOUD_POSTGRES_PASSWORD}
            - REDIS_HOST=nextcloud-cache
            - REDIS_HOST_PASSWORD=${NEXTCLOUD_REDIS_PASSWORD}

    nextcloud-database:
        image: postgres:16-alpine
        container_name: nextcloud-database
        restart: unless-stopped
        volumes:
            - /mnt/homecloud/data/nextcloud/database:/var/lib/postgresql/data
        networks:
            - nextcloud_net
        environment:
            - POSTGRES_DB=nextcloud
            - POSTGRES_USER=nextcloud
            - POSTGRES_PASSWORD=${NEXTCLOUD_POSTGRES_PASSWORD}

    nextcloud-cache:
        image: redis:7-alpine
        container_name: nextcloud-cache
        restart: unless-stopped
        networks:
            - nextcloud_net
        command: "redis-server --requirepass ${NEXTCLOUD_REDIS_PASSWORD}"

networks:
    nextcloud_net:
        name: nextcloud_net
        external: false
    traefik_net:
        external: true
